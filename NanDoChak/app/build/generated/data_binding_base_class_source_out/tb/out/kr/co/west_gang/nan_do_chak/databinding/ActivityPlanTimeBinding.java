// Generated by data binding compiler. Do not edit!
package kr.co.west_gang.nan_do_chak.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.NumberPicker;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import kr.co.west_gang.nan_do_chak.R;
import kr.co.west_gang.nan_do_chak.view.plantime.PlanTimeViewModel;

public abstract class ActivityPlanTimeBinding extends ViewDataBinding {
  @NonNull
  public final ImageView imageView;

  @NonNull
  public final Button planTimeButton;

  @NonNull
  public final NumberPicker planTimeHoursPicker;

  @NonNull
  public final TextView planTimeHoursText;

  @NonNull
  public final NumberPicker planTimeMinutesPicker;

  @NonNull
  public final TextView planTimeMinutesText;

  @NonNull
  public final NumberPicker planTimePicker;

  @NonNull
  public final TextView textView;

  @Bindable
  protected PlanTimeViewModel mViewModel;

  protected ActivityPlanTimeBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView imageView, Button planTimeButton, NumberPicker planTimeHoursPicker,
      TextView planTimeHoursText, NumberPicker planTimeMinutesPicker, TextView planTimeMinutesText,
      NumberPicker planTimePicker, TextView textView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imageView = imageView;
    this.planTimeButton = planTimeButton;
    this.planTimeHoursPicker = planTimeHoursPicker;
    this.planTimeHoursText = planTimeHoursText;
    this.planTimeMinutesPicker = planTimeMinutesPicker;
    this.planTimeMinutesText = planTimeMinutesText;
    this.planTimePicker = planTimePicker;
    this.textView = textView;
  }

  public abstract void setViewModel(@Nullable PlanTimeViewModel viewModel);

  @Nullable
  public PlanTimeViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static ActivityPlanTimeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_plan_time, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityPlanTimeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityPlanTimeBinding>inflateInternal(inflater, R.layout.activity_plan_time, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityPlanTimeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_plan_time, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityPlanTimeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityPlanTimeBinding>inflateInternal(inflater, R.layout.activity_plan_time, null, false, component);
  }

  public static ActivityPlanTimeBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityPlanTimeBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityPlanTimeBinding)bind(component, view, R.layout.activity_plan_time);
  }
}
